# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from FLite.protobuf import tracking_service_pb2 as FLite_dot_protobuf_dot_tracking__service__pb2


class TrackingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TrackTaskMetric = channel.unary_unary(
                '/FLite.protobuf.TrackingService/TrackTaskMetric',
                request_serializer=FLite_dot_protobuf_dot_tracking__service__pb2.TrackTaskMetricRequest.SerializeToString,
                response_deserializer=FLite_dot_protobuf_dot_tracking__service__pb2.TrackTaskMetricResponse.FromString,
                )
        self.TrackRoundMetric = channel.unary_unary(
                '/FLite.protobuf.TrackingService/TrackRoundMetric',
                request_serializer=FLite_dot_protobuf_dot_tracking__service__pb2.TrackRoundMetricRequest.SerializeToString,
                response_deserializer=FLite_dot_protobuf_dot_tracking__service__pb2.TrackRoundMetricResponse.FromString,
                )
        self.TrackClientMetric = channel.unary_unary(
                '/FLite.protobuf.TrackingService/TrackClientMetric',
                request_serializer=FLite_dot_protobuf_dot_tracking__service__pb2.TrackClientMetricRequest.SerializeToString,
                response_deserializer=FLite_dot_protobuf_dot_tracking__service__pb2.TrackClientMetricResponse.FromString,
                )
        self.TrackClientTrainMetric = channel.unary_unary(
                '/FLite.protobuf.TrackingService/TrackClientTrainMetric',
                request_serializer=FLite_dot_protobuf_dot_tracking__service__pb2.TrackClientTrainMetricRequest.SerializeToString,
                response_deserializer=FLite_dot_protobuf_dot_tracking__service__pb2.TrackClientTrainMetricResponse.FromString,
                )
        self.TrackClientTestMetric = channel.unary_unary(
                '/FLite.protobuf.TrackingService/TrackClientTestMetric',
                request_serializer=FLite_dot_protobuf_dot_tracking__service__pb2.TrackClientTestMetricRequest.SerializeToString,
                response_deserializer=FLite_dot_protobuf_dot_tracking__service__pb2.TrackClientTestMetricResponse.FromString,
                )
        self.GetRoundMetrics = channel.unary_unary(
                '/FLite.protobuf.TrackingService/GetRoundMetrics',
                request_serializer=FLite_dot_protobuf_dot_tracking__service__pb2.GetRoundMetricsRequest.SerializeToString,
                response_deserializer=FLite_dot_protobuf_dot_tracking__service__pb2.GetRoundMetricsResponse.FromString,
                )
        self.GetClientMetrics = channel.unary_unary(
                '/FLite.protobuf.TrackingService/GetClientMetrics',
                request_serializer=FLite_dot_protobuf_dot_tracking__service__pb2.GetClientMetricsRequest.SerializeToString,
                response_deserializer=FLite_dot_protobuf_dot_tracking__service__pb2.GetClientMetricsResponse.FromString,
                )
        self.GetRoundTrainTestTime = channel.unary_unary(
                '/FLite.protobuf.TrackingService/GetRoundTrainTestTime',
                request_serializer=FLite_dot_protobuf_dot_tracking__service__pb2.GetRoundTrainTestTimeRequest.SerializeToString,
                response_deserializer=FLite_dot_protobuf_dot_tracking__service__pb2.GetRoundTrainTestTimeResponse.FromString,
                )


class TrackingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TrackTaskMetric(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TrackRoundMetric(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TrackClientMetric(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TrackClientTrainMetric(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TrackClientTestMetric(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRoundMetrics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetClientMetrics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRoundTrainTestTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TrackingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TrackTaskMetric': grpc.unary_unary_rpc_method_handler(
                    servicer.TrackTaskMetric,
                    request_deserializer=FLite_dot_protobuf_dot_tracking__service__pb2.TrackTaskMetricRequest.FromString,
                    response_serializer=FLite_dot_protobuf_dot_tracking__service__pb2.TrackTaskMetricResponse.SerializeToString,
            ),
            'TrackRoundMetric': grpc.unary_unary_rpc_method_handler(
                    servicer.TrackRoundMetric,
                    request_deserializer=FLite_dot_protobuf_dot_tracking__service__pb2.TrackRoundMetricRequest.FromString,
                    response_serializer=FLite_dot_protobuf_dot_tracking__service__pb2.TrackRoundMetricResponse.SerializeToString,
            ),
            'TrackClientMetric': grpc.unary_unary_rpc_method_handler(
                    servicer.TrackClientMetric,
                    request_deserializer=FLite_dot_protobuf_dot_tracking__service__pb2.TrackClientMetricRequest.FromString,
                    response_serializer=FLite_dot_protobuf_dot_tracking__service__pb2.TrackClientMetricResponse.SerializeToString,
            ),
            'TrackClientTrainMetric': grpc.unary_unary_rpc_method_handler(
                    servicer.TrackClientTrainMetric,
                    request_deserializer=FLite_dot_protobuf_dot_tracking__service__pb2.TrackClientTrainMetricRequest.FromString,
                    response_serializer=FLite_dot_protobuf_dot_tracking__service__pb2.TrackClientTrainMetricResponse.SerializeToString,
            ),
            'TrackClientTestMetric': grpc.unary_unary_rpc_method_handler(
                    servicer.TrackClientTestMetric,
                    request_deserializer=FLite_dot_protobuf_dot_tracking__service__pb2.TrackClientTestMetricRequest.FromString,
                    response_serializer=FLite_dot_protobuf_dot_tracking__service__pb2.TrackClientTestMetricResponse.SerializeToString,
            ),
            'GetRoundMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRoundMetrics,
                    request_deserializer=FLite_dot_protobuf_dot_tracking__service__pb2.GetRoundMetricsRequest.FromString,
                    response_serializer=FLite_dot_protobuf_dot_tracking__service__pb2.GetRoundMetricsResponse.SerializeToString,
            ),
            'GetClientMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetClientMetrics,
                    request_deserializer=FLite_dot_protobuf_dot_tracking__service__pb2.GetClientMetricsRequest.FromString,
                    response_serializer=FLite_dot_protobuf_dot_tracking__service__pb2.GetClientMetricsResponse.SerializeToString,
            ),
            'GetRoundTrainTestTime': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRoundTrainTestTime,
                    request_deserializer=FLite_dot_protobuf_dot_tracking__service__pb2.GetRoundTrainTestTimeRequest.FromString,
                    response_serializer=FLite_dot_protobuf_dot_tracking__service__pb2.GetRoundTrainTestTimeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'FLite.protobuf.TrackingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TrackingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TrackTaskMetric(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FLite.protobuf.TrackingService/TrackTaskMetric',
            FLite_dot_protobuf_dot_tracking__service__pb2.TrackTaskMetricRequest.SerializeToString,
            FLite_dot_protobuf_dot_tracking__service__pb2.TrackTaskMetricResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TrackRoundMetric(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FLite.protobuf.TrackingService/TrackRoundMetric',
            FLite_dot_protobuf_dot_tracking__service__pb2.TrackRoundMetricRequest.SerializeToString,
            FLite_dot_protobuf_dot_tracking__service__pb2.TrackRoundMetricResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TrackClientMetric(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FLite.protobuf.TrackingService/TrackClientMetric',
            FLite_dot_protobuf_dot_tracking__service__pb2.TrackClientMetricRequest.SerializeToString,
            FLite_dot_protobuf_dot_tracking__service__pb2.TrackClientMetricResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TrackClientTrainMetric(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FLite.protobuf.TrackingService/TrackClientTrainMetric',
            FLite_dot_protobuf_dot_tracking__service__pb2.TrackClientTrainMetricRequest.SerializeToString,
            FLite_dot_protobuf_dot_tracking__service__pb2.TrackClientTrainMetricResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TrackClientTestMetric(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FLite.protobuf.TrackingService/TrackClientTestMetric',
            FLite_dot_protobuf_dot_tracking__service__pb2.TrackClientTestMetricRequest.SerializeToString,
            FLite_dot_protobuf_dot_tracking__service__pb2.TrackClientTestMetricResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRoundMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FLite.protobuf.TrackingService/GetRoundMetrics',
            FLite_dot_protobuf_dot_tracking__service__pb2.GetRoundMetricsRequest.SerializeToString,
            FLite_dot_protobuf_dot_tracking__service__pb2.GetRoundMetricsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetClientMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FLite.protobuf.TrackingService/GetClientMetrics',
            FLite_dot_protobuf_dot_tracking__service__pb2.GetClientMetricsRequest.SerializeToString,
            FLite_dot_protobuf_dot_tracking__service__pb2.GetClientMetricsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRoundTrainTestTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FLite.protobuf.TrackingService/GetRoundTrainTestTime',
            FLite_dot_protobuf_dot_tracking__service__pb2.GetRoundTrainTestTimeRequest.SerializeToString,
            FLite_dot_protobuf_dot_tracking__service__pb2.GetRoundTrainTestTimeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
